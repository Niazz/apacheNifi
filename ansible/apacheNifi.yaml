---
- hosts: nifi-instance
  become: true

  vars:
    nifi_version: "{{ nifi_version | default('2.0.0-M1') }}"

  tasks:
    - name: Download Oracle JDK tarball
      ansible.builtin.get_url:
        url: "https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz"
        dest: "/tmp/oracle_jdk.tar.gz"
        mode: '0644'

    - name: Extract Oracle JDK
      ansible.builtin.unarchive:
        src: "/tmp/oracle_jdk.tar.gz"
        dest: "/opt/"
        remote_src: true
        creates: "/opt/jdk21"
        mode: '0755'

    - name: Set JAVA_HOME environment variable
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: 'export JAVA_HOME=/opt/jdk21'
        create: yes

    - name: Add JAVA_HOME to PATH
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: 'export PATH=$JAVA_HOME/bin:$PATH'
        insertafter: 'export JAVA_HOME=/opt/jdk21'
        create: yes

    - name: Load the updated .bashrc
      ansible.builtin.command: "bash -c 'source /home/{{ ansible_user }}/.bashrc'"
      args:
        executable: /bin/bash

    - name: Install unzip and tar
      ansible.builtin.dnf:  # Use dnf module for systems using Python 3
        name:
          - unzip
          - tar
      become: yes

    - name: Download NiFi tarball
      ansible.builtin.get_url:
        url: "https://www.apache.org/dyn/closer.lua/nifi/{{ nifi_version }}/nifi-{{ nifi_version }}-bin.tar.gz"
        dest: "/tmp/nifi-{{ nifi_version }}-bin.tar.gz"
        mode: '0644'

    - name: Extract NiFi
      ansible.builtin.command: "tar xzf /tmp/nifi-{{ nifi_version }}-bin.tar.gz -C /opt/"
      become: yes
      args:
        creates: "/opt/nifi-{{ nifi_version }}/"

    - name: Configure NiFi
      become: yes
      template:
        src: "nifi.properties.j2"
        dest: "/opt/nifi-{{ nifi_version }}/conf/nifi.properties"

    - name: Start NiFi
      become: yes
      command: "/opt/nifi-{{ nifi_version }}/bin/nifi.sh start"